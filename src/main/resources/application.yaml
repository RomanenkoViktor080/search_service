spring:
  application:
    name: search_service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  kafka:
    bootstrap-servers: localhost:9092
    properties:
      schema.registry.url: http://localhost:8081
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      group-id: search_service
      properties:
        specific.avro.reader: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.RecordNameStrategy
    topics:
      user-create:
        name: users.create
      user-update:
        name: users.update
      promotion-users-events:
        name: promotion.users.events
      search-users-impression:
        name: search.users.impression
      promotion-tariffs-events:
        name: promotion.tariffs.events

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  data:
    redis:
      port: 6379
      host: localhost

    elasticsearch:
      port: 9200
      host: localhost
      indexes:
        users:
          title: "users"
          hours-rotation: 4
      index:
        auto-create: true
server:
  port: 8084

logging:
  level:
    root: info


